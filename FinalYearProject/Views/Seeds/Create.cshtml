@model FinalYearProject.Models.SeedCreateViewModel

@{
    ViewData["Title"] = "Add New Seed";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" id="createSeedForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Name" class="control-label"></label>
                                    <input asp-for="Name" class="form-control" placeholder="Enter seed name" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Price" class="control-label"></label>
                                    <input asp-for="Price" type="number" step="0.01" class="form-control" placeholder="0.00" />
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="Description" class="control-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter seed description"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Stock" class="control-label"></label>
                                    <input asp-for="Stock" type="number" class="form-control" min="0" />
                                    <span asp-validation-for="Stock" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="ExpiryDate" class="control-label"></label>
                                    <input asp-for="ExpiryDate" type="date" class="form-control" />
                                    <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="CategoryID" class="control-label">Category</label>
                                    <select asp-for="CategoryID" class="form-select">
                                        <option value="">-- Select Category --</option>
                                        @foreach (var category in Model.Categories)
                                        {
                                            <option value="@category.Id">@category.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CategoryID" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="AgentID" class="control-label">Agent</label>
                                    <select asp-for="AgentID" class="form-select">
                                        <option value="">-- Select Agent --</option>
                                        @foreach (var agent in Model.Agents)
                                        {
                                            <option value="@agent.Id">@agent.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="AgentID" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Image" class="control-label">Image URL</label>
                                    <input asp-for="Image" type="url" class="form-control" placeholder="https://example.com/image.jpg" />
                                    <span asp-validation-for="Image" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group form-check">
                            <input asp-for="Approval" class="form-check-input" />
                            <label asp-for="Approval" class="form-check-label">Approved</label>
                            <span asp-validation-for="Approval" class="text-danger"></span>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 text-start">
                                <div class="form-group">
                                    <a asp-action="Index" class="btn btn-secondary">
                                        <i class="fas fa-arrow-left"></i> Back to List
                                    </a>
                                    <button type="reset" class="btn btn-outline-secondary" id="resetButton">
                                        <i class="fas fa-undo"></i> Reset
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-6 text-end">
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-plus"></i> Create Seed
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('ExpiryDate').min = today;

            const form = document.getElementById('createSeedForm');
            form.addEventListener('submit', function(e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            });
        });
        
        
        // Reset button functionality
            const resetButton = document.getElementById('resetButton');
            resetButton.addEventListener('click', function(e) {
                e.preventDefault();

                // Reset form fields
                form.reset();

                // Clear validation messages
                form.classList.remove('was-validated');

                // Clear individual validation messages
                const validationSpans = form.querySelectorAll('.text-danger');
                validationSpans.forEach(span => {
                    span.textContent = '';
                });

                // Reset select dropdowns to first option
                const selectElements = form.querySelectorAll('select');
                selectElements.forEach(select => {
                    select.selectedIndex = 0;
                });

                // Reset checkbox
                const approvalCheckbox = document.getElementById('Approval');
                if (approvalCheckbox) {
                    approvalCheckbox.checked = false;
                }

                // Set default expiry date (6 months from now)
                const expiryDateInput = document.getElementById('ExpiryDate');
                if (expiryDateInput) {
                    const sixMonthsFromNow = new Date();
                    sixMonthsFromNow.setMonth(sixMonthsFromNow.getMonth() + 6);
                    expiryDateInput.value = sixMonthsFromNow.toISOString().split('T')[0];
                }

                // Set focus to first field
                const firstInput = form.querySelector('input, select, textarea');
                if (firstInput) {
                    firstInput.focus();
                }

                // Show success message
                alert('Form has been reset to default values!');
            });

            // Set default values on page load
            const setDefaultValues = function() {
                const expiryDateInput = document.getElementById('ExpiryDate');
                if (expiryDateInput && !expiryDateInput.value) {
                    const sixMonthsFromNow = new Date();
                    sixMonthsFromNow.setMonth(sixMonthsFromNow.getMonth() + 6);
                    expiryDateInput.value = sixMonthsFromNow.toISOString().split('T')[0];
                }

                const stockInput = document.getElementById('Stock');
                if (stockInput && !stockInput.value) {
                    stockInput.value = '0';
                }
            };

            setDefaultValues();
        });


    </script>
}